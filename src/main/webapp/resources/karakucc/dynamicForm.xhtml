<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:cc="http://java.sun.com/jsf/composite"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:k="http://java.sun.com/jsf/composite/karaku"
	xmlns:kk="http://java.sun.com/jsf/composite/karakucc"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich">
	<cc:interface>
		<cc:attribute name="fields"
			type="py.una.pol.karaku.dynamic.forms.DynamicFormList" required="true" />

	</cc:interface>

	<cc:implementation>

		<!-- Verifica si hay que dibujar un PopUpPara el picker -->
		<c:if test="#{cc.attrs.fields.isWithPickerFields() == 'true'}">
			<!-- Asignamos para que necesariamente se renderize el emptyPicker. -->
				#{cc.attrs.fields.resetPicker()}
				<kk:pickerPopUp id="pickerId"
				pickerField="#{cc.attrs.fields.currentPickerField}"
				closeJS="#{rich:component('pickerPopUp')}.hide()"
				render="#{cc.attrs.fields.currentRender}" pickerId="pickerPopUp" />
		</c:if>

		<h:form id="dynamic">
			<h:panelGrid columns="6"
				columnClasses="form_label,form_input,form_error,form_label,form_input,form_error">
				<c:forEach items="#{cc.attrs.fields.fields}" var="item">
					<c:choose>
						<c:when
							test="#{item.type eq 'py.una.pol.karaku.dynamic.forms.PickerField'}">

							<!-- 
								
							Se remplazo la implementación del pickerButton en este lugar por que se
							necesitaba que el pickerPopup se muestre luego de que se complete 
							la acción de setear el picker y cargar las entidades a mostrar.
							
							Cambios:
							- Se cambio `onclick` por `oncomplete`.
							 -->
							<h:outputLabel value="#{item.label}" />
							<h:panelGroup id="#{item.id}">
								<kk:pickerUpdater pickerField="#{item}" />
								<h:inputText value="#{item.code}"
									rendered="#{item.hasCodeInput}"
									disabled="#{item.buttonDisabled}">
									<a4j:ajax event="blur" listener="#{item.keyUpListener}"
										disabled="#{not item.hasCodeInput}"
										render="#{item.id} #{item.idMessage} " execute="valueId"
										immediate="true" />
								</h:inputText>
								<a4j:commandButton disabled="#{item.buttonDisabled}"
									action="#{cc.attrs.fields.setPicker(item.id)}"
									oncomplete="#{rich:component('pickerPopUp')}.show();return false;"
									render="dynamic:form:pickerId:pickerPopUp"
									value="#{msg['COMPONENT_PICKER_CHOOSE']}" immediate="true" />
								<h:outputLabel value="#{item.formmatedSelectedOption}"
									style="text-transform:none" />
							</h:panelGroup>
							<rich:message ajaxRendered="true" for="#{item.id}" />
						</c:when>
						<c:when
							test="#{item.type eq 'py.una.pol.karaku.dynamic.forms.TextField'}">
							<h:outputLabel value="#{item.label}" />
							<h:inputText binding="#{item.bind}" id="#{item.bind.id}" />
							<h:message for="#{item.bind.id}" />
						</c:when>
						<c:when
							test="#{item.type eq 'py.una.pol.karaku.dynamic.forms.ButtonField'}">

							<h:outputLabel value="#{item.label}" id="#{item.id}_label"
								styleClass="#{item.required?'required_label' : ''}" />
							<h:inputText value="#{item.object}" id="#{item.id}_input"
								disabled="#{item.bind.disabled || not item.inputEditable}" />
							<h:commandButton binding="#{item.buttonBind}"
								id="#{item.id}_button" />
						</c:when>
						<c:when
							test="#{item.type eq 'py.una.pol.karaku.dynamic.forms.ComboBoxField'}">
							<h:outputLabel value="#{item.label}" />
							<h:selectOneMenu binding="#{item.bind}" id="#{item.bind.id}" />
							<h:message for="#{item.bind.id}" />
						</c:when>
						<c:when
							test="#{item.type eq 'py.una.pol.karaku.dynamic.forms.CalendarField'}">
							<h:outputLabel value="#{item.label}" />
							<rich:calendar binding="#{item.bind}" id="#{item.id}" />
							<rich:message for="#{item.id}" />
						</c:when>
						<c:when
							test="#{cc.attrs.field.type eq 'py.una.pol.karaku.dynamic.forms.Button'}">
							<a4j:commandButton id="#{cc.attrs.field.id}"
								binding="#{cc.attrs.field.bind}" />
						</c:when>
						<c:when
							test="#{item.type eq 'py.una.pol.karaku.dynamic.forms.RadioButtonField'}">
							<h:outputLabel value="#{item.label}" />
							<h:selectOneRadio binding="#{item.bind}" id="#{item.bind.id}" />
							<h:message for="#{item.bind.id}" />
						</c:when>
					</c:choose>
				</c:forEach>
			</h:panelGrid>
			<cc:insertChildren />
		</h:form>
	</cc:implementation>
</ui:composition>