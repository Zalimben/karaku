application.homePage = faces/views/index.xhtml
application.appUrlPlaceHolder = SIGH

jboss.entity.manager.factory.jndi.name = java:jboss/base/persistence/sigh

# Driver de la base de datos
karaku.jpa.driverName = org.postgresql.Driver
karaku.jpa.enabled = true
karaku.liquibase.enabled = false

hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
hibernate.show_sql = true
hibernate.format_sql = false
hibernate.hbm2ddl.auto = validate
hibernate.envers.schema = audit
base-package-hibernate = py.una.med.*

#Archivo donde se almacena informaci칩n cambiante, las propiedades 
#dentro de este archivo se mezclan con las principales, y pueden
#ser utilizadas dentro de la definici칩n de cualquier bean
karaku.changing.properties = /etc/SIGH.properties

#lista separada por espacios de bundles
language_bundles = ../language.properties.base ../language.properties.configuracion ../language.properties.identificacion ../language.properties.farmacia
menu_location =  menu/configuracion.xml menu/identificacion.xml menu/farmacia.xml menu/base.xml

liquibase.changelog-file = classpath:database/base/db-changelog.xml


# Expresi칩n regular que define aquellos paquetes que ser치n escaneados en
# busca de Clases que puedan ser serializadas (marshal) o deserializadas 
# (unmarshal) por JAXB  .
# En este caso busca todos los paquetes que terminan con 'ws.schema'
# No siempre es posible obtener todos los paquetes, es posible
# que algunos no sean detectados en tiempo de inicio (esto se debe a que
# algunos paquetes no son cargados hasta ser necesarios).
# true para habilitar, cualquier otro para des-habilitar
#karaku.ws.client.enabled = false
#karaku.ws.client.packages_to_scan = [\\w\\.]*services\\.schemas