
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<security:http entry-point-ref="basicAuthenticationEntryPoint"
		pattern="/endpoints/.*" authentication-manager-ref="authenticationManager"
		create-session="stateless" request-matcher="regex" use-expressions="true"
		auto-config="false">
		<security:intercept-url pattern="/endpoints/.*\.wsdl"
			access="isAuthenticated()" />
		<security:custom-filter ref="basicAuthenticationFilter"
			position="BASIC_AUTH_FILTER" />
	</security:http>

	<security:http entry-point-ref="casEntryPoint"
		use-expressions="true" auto-config="true" authentication-manager-ref="casAuthenticationManager">
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />

		<security:custom-filter position="CAS_FILTER"
			ref="casFilter" />
		<security:logout logout-success-url="/${application.homePage}" />
		<security:custom-filter ref="requestSingleLogoutFilter"
			before="LOGOUT_FILTER" />
		<security:custom-filter ref="singleLogoutFilter"
			before="CAS_FILTER" />

		<security:access-denied-handler
			error-page="/faces/views/errors/accessDenied.xhtml" />
	</security:http>

	<security:authentication-manager alias="casAuthenticationManager">
		<security:authentication-provider
			ref="casAuthenticationProvider" />
	</security:authentication-manager>

	<!-- WEB Service Authentication -->

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="karakuWsAuthenticationProvider" />
		<security:authentication-provider
			ref="casAuthenticationProvider" />

	</security:authentication-manager>

	<bean id="basicAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="SIGH" />
	</bean>

	<bean id="karakuWsAuthenticationProvider"
		class="py.una.pol.karaku.services.server.KarakuWSAuthenticationProvider" />

	<bean id="basicAuthenticationFilter"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint" />
	</bean>
	<!-- END WEB SERVICE Authentication -->

	<!-- Cas authenthication -->
	<bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="casAuthenticationManager" />
	</bean>
	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service"
			value="${application.host}/j_spring_cas_security_check" />
		<property name="SendRenew" value="false" />
	</bean>

	<bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${cas.server.host}/cas/login" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="userDetailsService" ref="allAuthenticatedUserService" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${cas.server.host}/cas" />
			</bean>
		</property>
		<property name="key" value="cas" />
	</bean>

	<bean id="allAuthenticatedUserService" class="py.una.pol.karaku.security.SIGHUserService" />

	<bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />

	<bean id="requestSingleLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg
			value="${cas.server.host}/cas/logout?service=${application.host}/" />
		<constructor-arg>
			<bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</constructor-arg>
		<property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
	</bean>

	<security:global-method-security
		pre-post-annotations="enabled" proxy-target-class="true" />
</beans>