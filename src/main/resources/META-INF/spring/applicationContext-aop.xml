<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<aop:aspectj-autoproxy />
	<bean class="py.una.pol.karaku.audit.Auditor" id="auditBase" />
	<bean class="py.una.pol.karaku.dao.filter.KarakuEntityFilterHandler" id="filterHandler" />
	<bean class="py.una.pol.karaku.security.KarakuSecurity" id="security" />
	<aop:config>
		<aop:aspect id="auditBaseAspect" ref="auditBase">
			<aop:before method="doAudit" pointcut="@annotation(audit)"
				arg-names="audit" />
		</aop:aspect>
		<aop:aspect id="securityAspect" ref="security">
			<aop:before method="doIt" pointcut="@annotation(hasRole)"
				arg-names="hasRole" />
		</aop:aspect>
		<aop:aspect id="filterHandlerAspect" ref="filterHandler">
			<aop:before method="doBefore" pointcut="@annotation(scope)"
				arg-names="scope" />
			<aop:after method="doAfter" pointcut="@annotation(scope)"
				arg-names="scope" />
		</aop:aspect>
	</aop:config>

</beans>
